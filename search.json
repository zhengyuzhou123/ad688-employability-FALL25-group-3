[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Geographic and Remote Work Analysis: Job Market 2024",
    "section": "",
    "text": "Our team chose Geographic and Remote Work Analysis as our research topic. Since the outbreak of the pandemic, the rise of remote work, along with the continuous emergence of opportunities related to artificial intelligence, has changed the way job seekers evaluate career choices. At the same time, cities like Austin, Denver and Raleigh-Durham are leveraging flexible work policies and lower living costs to attract new talent."
  },
  {
    "objectID": "index.html#research-rationale",
    "href": "index.html#research-rationale",
    "title": "Geographic and Remote Work Analysis: Job Market 2024",
    "section": "",
    "text": "Our team chose Geographic and Remote Work Analysis as our research topic. Since the outbreak of the pandemic, the rise of remote work, along with the continuous emergence of opportunities related to artificial intelligence, has changed the way job seekers evaluate career choices. At the same time, cities like Austin, Denver and Raleigh-Durham are leveraging flexible work policies and lower living costs to attract new talent."
  },
  {
    "objectID": "index.html#why-is-this-topic-important",
    "href": "index.html#why-is-this-topic-important",
    "title": "Geographic and Remote Work Analysis: Job Market 2024",
    "section": "Why is this topic important?",
    "text": "Why is this topic important?\nIn today’s AI-dominated landscape, geographic location and skill sets have become pivotal factors in employment opportunities. As AI-driven technologies continue to enhance productivity, understanding the following aspects is critical: comparative job growth between AI and traditional sectors, hiring dynamics in major tech hubs such as Silicon Valley, Boston, and Austin, the urban-rural divide in AI versus non-AI career opportunities, and the transformation of remote work paradigms."
  },
  {
    "objectID": "index.html#trend-analysis",
    "href": "index.html#trend-analysis",
    "title": "Geographic and Remote Work Analysis: Job Market 2024",
    "section": "Trend Analysis",
    "text": "Trend Analysis\nThis section examines geographic and remote work dynamics in the 2024–2025 U.S. labor market.\nAI-related jobs are highly concentrated in tech and policy hubs. Washington, D.C. leads with 4.4% of postings requiring AI skills, followed by Washington State and Delaware. At the city level, New York, Seattle, and San Jose dominate in absolute AI job postings, while D.C. has the highest proportion. Nationally, postings mentioning AI skills rose 20% year-over-year in 2024, with generative AI skills nearly quadrupling (Lightcast and Stanford HAI (2025), 1–17). In contrast, non-AI job growth is broad-based: 33 states reported employment gains in 2024, led by Rochester, MN (+6.5%) and Stockton–Lodi, CA (+5.3%), driven by healthcare and logistics (U.S. Bureau of Labor Statistics (2023), 1–2).\nRemote work has stabilized at a “new normal.” Although job postings labeled remote declined from &gt;10% in 2022 to ~7.5% in May 2025 (Indeed Hiring Lab (2024)), telework rates remain far above pre-pandemic levels, with ~20% of workers telecommuting in 2024 (U.S. Bureau of Labor Statistics (2024), 12). By industry, remote adoption is highest in IT, finance, and management (Makridis (2024), 16; Bick, Blandin, and Mertens (2024), 7)), while healthcare, retail, and manufacturing remain predominantly on-site. Employers are shifting toward hybrid models, often requiring more in-office presence, though remote-capable roles continue to play a significant role (Barrero, Bloom, and Davis (2023), 20–21).\nTraditional tech hubs like Silicon Valley and New York City remain dominant in high-skill hiring, with over 65% of AI engineers located in these regions as of 2024. Despite rising costs and the expansion of remote work, their strong innovation ecosystems and dense talent networks preserve their competitive edge. At the same time, geographic diversification is accelerating: Miami and San Diego are emerging as fast-growing hubs, driven by lifestyle appeal, lower living costs, and, in Miami’s case, favorable tax policies. Miami saw a 12% increase in AI roles, while San Diego experienced a 7% rise in Big Tech hiring and raised $5.7 billion in venture capital. Conversely, former growth leaders like Austin and Houston are losing momentum, with startup employment declining by 6% and 10.9%, respectively, due to infrastructure gaps, cultural mismatch, and a shift back toward hybrid work models (SignalFire (2025)).\nGenerative AI introduces a reversal in the geography of job market exposure compared to earlier automation technologies. Whereas prior waves of automation—such as robotics and enterprise software—primarily disrupted rural and small-town economies by replacing routine manual or physical labor, generative AI disproportionately affects urban, high-skill, white-collar labor markets. These urban centers, including San Jose, San Francisco, New York, and Washington D.C., are home to occupations rich in cognitive, nonroutine tasks such as coding, writing, and data analysis—tasks highly susceptible to AI augmentation or displacement(Muro, Methkupally, and Kinder (2025)).\nAs a result, AI exposure rates in urban counties often exceed 40%, while rural counties average closer to 30%, reflecting both differing occupational structures and varying access to information-oriented industries. While rural areas may be more insulated from AI disruption, they are also less likely to benefit from AI-driven productivity gains. This spatial shift in exposure demands new policy attention focused on urban workforce reskilling, while also ensuring rural communities are not left behind in the emerging AI economy(Muro, Methkupally, and Kinder (2025))."
  },
  {
    "objectID": "index.html#what-do-you-expect-to-find-in-your-analysis",
    "href": "index.html#what-do-you-expect-to-find-in-your-analysis",
    "title": "Geographic and Remote Work Analysis: Job Market 2024",
    "section": "What do you expect to find in your analysis?",
    "text": "What do you expect to find in your analysis?\nOur research encompasses various aspects of geographic distribution and remote work trends. Specifically, we aim to investigate: Job growth patterns across different cities and states, including a comparative analysis of which metropolitan areas demonstrate the highest expansion rates for both AI-related and non-AI career opportunities. The evolution of remote work arrangements, examining whether remote positions are experiencing growth or decline and how this shift affects workforce distribution. Comprehensive analysis of tech hub dynamics, identifying whether traditional technology centers like Silicon Valley, Austin, and Boston continue to dominate the hiring landscape, or if emerging locations are gaining competitive advantages. The urban-rural divide in employment opportunities, investigating how job market conditions differ between metropolitan and rural areas for both AI and traditional professional roles, and what this means for workforce mobility and regional economic development."
  },
  {
    "objectID": "data_analysis.html",
    "href": "data_analysis.html",
    "title": "Data Analysis",
    "section": "",
    "text": "1 — 4.0 Setup & Load —\nimport os, textwrap import numpy as np import pandas as pd import matplotlib.pyplot as plt import missingno as msno\n\n\n2 Paths\nDATA_PATH = “data/lightcast_job_postings.csv” CLEAN_PATH = “data/cleaned_lightcast.csv” LOG_PATH = “logs/cleaning_log.txt” FIG_MISS = “figures/missing_values_heatmap.png”\nos.makedirs(“logs”, exist_ok=True) os.makedirs(“figures”, exist_ok=True)\ndef log(msg: str): with open(LOG_PATH, “a”, encoding=“utf-8”) as f: f.write(msg.rstrip() + “”) print(msg)\n\n\n3 Load data\ndf = pd.read_csv(DATA_PATH, low_memory=False, on_bad_lines=“skip”) log(f”Loaded dataset → rows: {len(df):,}, cols: {df.shape[1]}“) log(f”Columns (head): {list(df.columns)[:12]} …“)\n\n\n4 — 4.1 Drop redundant/irrelevant columns —\ncolumns_to_drop = [ “ID”,“URL”,“ACTIVE_URLS”,“DUPLICATES”,“LAST_UPDATED_TIMESTAMP”, “NAICS2”,“NAICS3”,“NAICS4”,“NAICS5”,“NAICS6”, “SOC_2”,“SOC_3”,“SOC_5”] before_cols = df.shape[1] df.drop(columns=columns_to_drop, inplace=True, errors=“ignore”) after_cols = df.shape[1] log(f”Dropped {before_cols - after_cols} columns; remaining columns: {after_cols}“)\n\n\n5 Normalize column names and basic types\ndf.columns = [c.strip() for c in df.columns] if “POSTED” in df.columns: df[“POSTED”] = pd.to_datetime(df[“POSTED”], errors=“coerce”) if “Salary” in df.columns: df[“Salary”] = pd.to_numeric( df[“Salary”].astype(str).str.replace(r”[^0-9.-]“,”“, regex=True), errors=”coerce” )\n\n\n6 — 4.2 Visualize & handle missing values —\nplt.figure(figsize=(10,6)) msno.heatmap(df) plt.title(“Missing Values Heatmap”, fontsize=14) plt.tight_layout() plt.savefig(FIG_MISS, dpi=150) plt.show() log(f”Saved missingness heatmap → {FIG_MISS}“)\n\n\n7 Log top-20 missing columns\nna_pct = df.isna().mean().sort_values(ascending=False) * 100 log(“Top-20 columns by missing%:”) for col, pct in na_pct.head(20).items(): log(f” - {col}: {pct:.1f}%“)\n\n\n8 Drop columns with &gt;50% missing\nthresh = len(df) * 0.5 before_cols = df.shape[1] df.dropna(axis=1, thresh=thresh, inplace=True) after_cols = df.shape[1] log(f”Dropped {before_cols - after_cols} high-missing columns (&gt;50%). Remaining: {after_cols}“)\n\n\n9 Impute numeric\nif “Salary” in df.columns: med_salary = df[“Salary”].median() df[“Salary”].fillna(med_salary, inplace=True) log(f”Filled Salary NAs with median: {med_salary:.2f}“)\n\n\n10 Impute categorical\nfor cat in [“Industry”,“REMOTE_TYPE_NAME”,“LOCATION”]: if cat in df.columns: df[cat] = df[cat].fillna(“Unknown”).astype(str).str.strip() log(f”Filled {cat} NAs with ‘Unknown’“)\n\n\n11 — 4.3 Remove duplicates —\nsubset_cols = [c for c in [“TITLE”,“COMPANY”,“LOCATION”,“POSTED”] if c in df.columns] before = len(df) if subset_cols: df.drop_duplicates(subset=subset_cols, keep=“first”, inplace=True) after = len(df) log(f”Removed duplicates by {subset_cols}: {before - after} rows dropped; remaining: {after}“)\n\n\n12 — 4.4 Optional salary sanity filter —\nif “Salary” in df.columns: bad = (df[“Salary”] &lt; 1) | (df[“Salary”] &gt; 1_000_000) n_bad = int(bad.sum()) if n_bad &gt; 0: df.loc[bad, “Salary”] = np.nan med2 = df[“Salary”].median() df[“Salary”].fillna(med2, inplace=True) log(f”Clipped extreme Salary ({n_bad} rows) and refilled with median {med2:.2f}“)\n\n\n13 — 4.5 Save & summary —\ndf.to_csv(CLEAN_PATH, index=False) log(f”Saved cleaned dataset → {CLEAN_PATH}“)\nsummary = f”“” Rows: {len(df):,} Columns: {df.shape[1]} Sample columns: {list(df.columns)[:12]} ““” print(summary.strip())"
  }
]